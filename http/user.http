POST http://localhost:8080/user/Jack/create

Content-Type: application/json

{
  "fullname": "Captain Jack Sparrow",
  "about": "This is the day you will always remember as the day that you almost caught Captain Jack Sparrow!",
  "email": "captaina@blackpearl.sea"
}

################################

POST http://localhost:5000/signin
Content-Type: application/json

{
    "login":"565",
    "password":"xyz"
}

################################

GET http://localhost:5000?limit=20&offset=0

################################

GET http://localhost:5000/user

################################

GET http://localhost:5000/logout

################################

GET http://localhost:5000/1

/user/{nickname}/create:
    post:
      summary: Создание нового пользователя
      description: |
        Создание нового пользователя в базе данных.
      operationId: userCreate
      parameters:
        - name: nickname
          in: path
          description: Идентификатор пользователя.
          required: true
          type: string
        - name: profile
          in: body
          description: Данные пользовательского профиля.
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: |
            Пользователь успешно создан.
            Возвращает данные созданного пользователя.
          schema:
            $ref: '#/definitions/User'
        409:
          description: |
            Пользователь уже присутсвует в базе данных.
            Возвращает данные ранее созданных пользователей с тем же nickname-ом иои email-ом.
          schema:
            $ref: '#/definitions/Users'
  /user/{nickname}/profile:
    get:
      summary: Получение информации о пользователе
      description: |
        Получение информации о пользователе форума по его имени.
      consumes: [ ]
      operationId: userGetOne
      parameters:
        - name: nickname
          in: path
          description: Идентификатор пользователя.
          required: true
          type: string
      responses:
        200:
          description: |
            Информация о пользователе.
          schema:
            $ref: '#/definitions/User'
        404:
          description: |
            Пользователь отсутсвует в системе.
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Изменение данных о пользователе
      description: |
        Изменение информации в профиле пользователя.
      operationId: userUpdate
      parameters:
        - name: nickname
          in: path
          description: Идентификатор пользователя.
          required: true
          type: string
        - name: profile
          in: body
          description: Изменения профиля пользователя.
          required: true
          schema:
            $ref: '#/definitions/UserUpdate'
      responses:
        200:
          description: |
            Актуальная информация о пользователе после изменения профиля.
          schema:
            $ref: '#/definitions/User'
        404:
          description: |
            Пользователь отсутсвует в системе.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            Новые данные профиля пользователя конфликтуют с имеющимися пользователями.
          schema:
            $ref: '#/definitions/Error'